generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

enum MediaType {
  preview
  thumb
  original
  base
}

enum MediaFormat {
  jpeg
  webp
  avif
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String    @unique
  role          UserRole  @default(user)
  trusted_email Boolean
  avatar        String?
  products      Product[]
  orders        Order[]
  cart          Cart[]
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  price       Decimal        @default(0)
  count       Int            @default(1)
  disabled    Boolean        @default(false)
  userId      Int
  images      Media[]
  soldCount   OrderProduct[]
  cart        Cart[]
  user        User           @relation(fields: [userId], references: [id])
}

model Media {
  id        Int             @id @default(autoincrement())
  productId Int
  product   Product         @relation(fields: [productId], references: [id])
  versions  MediaVersion[]
}

model MediaVersion {
  id       Int     @id @default(autoincrement())
  mediaId  Int
  type     MediaType
  format   MediaFormat
  link     String
  media    Media   @relation(fields: [mediaId], references: [id])

  @@index([mediaId])
}

model Order {
  id            Int            @id @default(autoincrement())
  userId        Int
  date          DateTime       @default(now())
  orderProducts OrderProduct[]
  user          User           @relation(fields: [userId], references: [id])
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  sum       Decimal @default(0)
  productId Int
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
}

model Cart {
  userId    Int
  productId Int
  count     Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([userId, productId])
}
